{"version":3,"file":"index.js","sources":["../../src/canvas/setupHiDefCanvas.js","../../src/canvas/Renderer.js","../../src/geometry/Trigo.js","../../src/geometry/Vector.js","../../src/geometry/Geometry.js","../../src/graph/Link.js","../../src/graph/Node.js","../../src/graph/Graph.js","../../src/graph/TreeNode.js","../../src/graph/Tree.js","../../src/layout/AbstractGraphLayout.js","../../src/layout/ForceDirected.js","../../src/layout/TreeLayout.js","../../src/shape/Constants.js","../../src/shape/Shape.js","../../src/shape/Arc.js","../../src/shape/Circle.js","../../src/shape/Rectangle.js","../../src/InputDeviceTracker.js","../../src/MChart.js","../../src/OrgChart.js","../../src/index.js"],"sourcesContent":["/**\n * Create a High Definition Canvas.\n *\n * @param {*} canvas\n * @returns Scaled 2d Context\n */\nexport default function setupHiDefCanvas(canvas) {\n\t// Get the device pixel ratio, falling back to 1.\n\tvar devicePixelRatio = window.devicePixelRatio || 1;\n\n\tvar ctx = canvas.getContext(\"2d\");\n\n\tconsole.log(\"─────────────────────────\")\n\tconsole.log(\"│ setupHiDefCanvas      │\")\n\tconsole.log(\"─────────────────────────\")\n\tconsole.log(\"  devicePixelRatio : \" + devicePixelRatio)\n\tconsole.log(\"  canvas.width  : \" + canvas.width)\n\tconsole.log(\"  canvas.height : \" + canvas.height)\n\n\t// Get the size of the canvas in CSS pixels.\n\tvar rect = canvas.getBoundingClientRect();\n\tconsole.log(\"  rect.width  : \" + rect.width)\n\tconsole.log(\"  rect.height : \" + rect.height)\n\n    const initialWidth = canvas.width;\n    const initialHeight = canvas.height;\n\n\n\t// On Hi Def like Retina display we double the size of the canvas\n\tcanvas.width = initialWidth * devicePixelRatio;\n\tcanvas.height = initialHeight * devicePixelRatio;\n    ctx.scale(devicePixelRatio, devicePixelRatio);\n\n\t// and we shrink the display size using CSS\n\tcanvas.style.width = initialWidth + 'px';\n    canvas.style.height = initialHeight + 'px';\n\n\tconsole.log(\"  canvas.style.width  : \" + canvas.style.width)\n\tconsole.log(\"  canvas.style.height  : \" + canvas.style.height)\n\n\tconsole.log(\"  canvas.width  : \" + canvas.width)\n\tconsole.log(\"  canvas.height : \" + canvas.height)\n\n\tconsole.log(\" └───────────────────────┘\")\n\n\treturn ctx;\n}","\n\nexport default class Renderer {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n    }\n\n    drawGrid(w, h) {\n\n        this.ctx.save()\n\n        this.ctx.fillStyle = 'white'\n        this.ctx.fillRect(0, 0, w, h)\n        this.ctx.lineWidth = 0.3;\n        this.ctx.strokeStyle = 'lightgray'\n        this.ctx.fillStyle = 'black'\n\n        for (let i = 1; i < w; i++) {\n            this.ctx.beginPath()\n            if (i % 10 === 0) {\n                this.ctx.moveTo(i, 0);\n                this.ctx.lineTo(i, h)\n                this.ctx.moveTo(i, 0);\n            }\n            this.ctx.closePath()\n            this.ctx.stroke()\n        }\n\n        for (let i = 1; i < h; i++) {\n            this.ctx.beginPath()\n            if (i % 10 === 0) {\n                this.ctx.moveTo(0, i)\n                this.ctx.lineTo(w, i)\n                this.ctx.moveTo(0, i)\n            }\n            this.ctx.closePath()\n            this.ctx.stroke()\n        }\n\n\n        this.ctx.lineWidth = 1\n        this.ctx.strokeStyle = 'gray'\n\n        this.ctx.beginPath()\n        for (let i = 50; i < w; i += 10) {\n            if (i % 50 === 0) {\n                this.ctx.moveTo(i, 0)\n                this.ctx.lineTo(i, 30)\n                this.ctx.fillText(` ${i}`, i, 30)\n            } else {\n                this.ctx.moveTo(i, 0)\n                this.ctx.lineTo(i, 10)\n            }\n\n        }\n        this.ctx.closePath()\n        this.ctx.stroke()\n\n        this.ctx.beginPath()\n        for (let i = 50; i < h; i += 10) {\n            if (i % 50 === 0) {\n                this.ctx.moveTo(0, i)\n                this.ctx.lineTo(30, i)\n                this.ctx.fillText(` ${i}`, 30, i)\n            } else {\n                this.ctx.moveTo(0, i)\n                this.ctx.lineTo(10, i)\n            }\n\n        }\n        this.ctx.closePath()\n        this.ctx.stroke()\n\n        this.ctx.restore()\n    }\n}","// =============================================================\n//                          TRIGO FUNCTIONS\n// =============================================================\nexport const TWO_PI = Math.PI * 2;\n\n/**\n * Concernt mouse (x, y) relative to the center of the circle\n */\nexport function ConvertMousePositionToCoordinateGraph(mousePos, center) {\n  return {\n    x: mousePos.x - center.x,\n    y: -1 * (mousePos.y - center.y)\n  }\n}\n\nexport function to_radians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\nexport function to_degrees(radians) {\n  return radians * (180 / Math.PI);\n}\n\nexport function distanceXY(x0, y0, x1, y1) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function pointInCircle(point, circle) {\n  return distanceXY(point.x, point.y, circle.x, circle.y) < circle.radius;\n}\n\n/**\n * Convert from cartesian coordinates (x, y) to polar coordinates (r, θ).\n * @param {*} cx \n * @param {*} cy \n * @param {*} r \n * @param {*} angle \n * @returns \n */\nexport function getPointOnArc(cx, cy, r, angle) {\n  return {\n    x: cx + r * Math.cos(angle),\n    y: cy + r * Math.sin(angle)\n  };\n}\nexport function __getPointOnArc(point, r, angle) {\n  return {\n    x: point.x + r * Math.cos(angle),\n    y: point.y + r * Math.sin(angle)\n  };\n\n}\nexport function rotate(x, y, angle) {\n  return {\n    x: x * Math.cos(angle) - y * Math.sin(angle),\n    y: x * Math.sin(angle) + y * Math.cos(angle)\n  };\n}\n\n/*\n * Returns the angle θ between 2 points\n */\nfunction findAngle(p1, p2) {\n  var angleRAD = Math.atan2(p2.y - p1.y, p2.x - p1.x);\n  return angleRAD;\n}\n\n/**\n * Calculates the midpoint between two points [x1,y1] &  [x2,y2]\n */\nexport function midpoint(x1, y1, x2, y2) {\n  return {\n    x: (x1 + x2) / 2,\n    y: (y1 + y2) / 2\n  };\n}\n\n\n//bearing between the compass'center point and the specified point\nexport function __getBearing(point) {\n  var compass_points = [\"N\", \"NE\", \"E\", \"SE\", \"S\", \"SW\", \"W\", \"NW\", \"N\"];\n  var bearing = findAngle(\n    { x: this.cx, y: -this.cy },\n    { x: point.x, y: -point.y });\n\n    var bearingTT;\n  if (bearing < 0) {\n     bearingTT = 360 + bearing;\n   } \n   else {\n     bearingTT = bearing;\n   }\n  var compass_lookup = Math.round(bearingTT / 45);\n//  log(bearingTT + \" \" + compass_lookup + \" - \" + bearing);\n  return compass_points[compass_lookup];\n}","/**\n *  A vector is an entity that has both magnitude and direction.\n *  2D vector implementation based on the vector functions in P5.js\n */\n export class Vector {\n\tconstructor(x, y) {\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t\tif (isNaN(x) || isNaN(y)) {\n\t\t\tconsole.warn(`Vector(): parameters are not number: (${x}), ${y} `);\n\t\t}\n\t}\n\n\tstatic add(v1, v2) {\n\t\treturn new Vector(v1.x + v2.x, v1.y + v2.y);\n\t}\n\n\t/**\n\t * Divides a vector by a scalar and returns a new vector.\n\t *\n\t * @method div\n\t * @static\n\t * @param  {Vector} v\n\t * @param  {Number}  n\n\t * @return  {Vector}\n\t */\n\tstatic div(v, n) {\n\t\tlet result = v.copy();\n\t\treturn result.div(n);\n\t}\n\n\t/**\n\t * Linear interpolate the vector to another vector\n\t */\n\tstatic lerp(v1, v2, amount) {\n\t\tlet result = v1.copy();\n\t\treturn result.lerp(v2, amount);\n\t}\n\n\tstatic random(min, max) {\n\t\tlet x = randomIntBounds(min, max);\n\t\tlet y = randomIntBounds(min, max);\n\t\treturn new Vector(x, y);\n\t}\n\n\tstatic sub(v1, v2) {\n\t\treturn new Vector(v1.x - v2.x, v1.y - v2.y);\n\t}\n\n\t/**\n\t * Supports adding a Vector or a Scalar\n\t * @param {*} n\n\t * @returns\n\t */\n\tadd(n) {\n\t\tif (n instanceof Vector) {\n\t\t\tthis.x += n.x;\n\t\t\tthis.y += n.y;\n\t\t\treturn this;\n\t\t} else if (typeof n === \"number\") {\n\t\t\tthis.x += n;\n\t\t\tthis.y += n;\n\t\t\treturn this;\n\t\t} else {\n\t\t\tconsole.error(`Parameter in Vector.add(n) Not supported: ${n})`);\n\t\t}\n\t}\n\n\t/**\n\t * Return a copy of this Vector\n\t * @returns\n\t */\n\tcopy() {\n\t\treturn new Vector(this.x, this.y);\n\t}\n\n\t/**\n\t * Divide vector length (ie magnitude) by a constant  \n\t */ \n\tdiv(n) {\n\t\tif (n === 0) {\n\t\t\t//console.warn(\"Vector.div:\", \"divide by 0\");\n\t\t\treturn this;\n\t\t}\n\t\tthis.x /= n;\n\t\tthis.y /= n;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Linear Interpolation\n\t */ \n\tlerp(v1, amount) {\n\t\tthis.x += (v1.x - this.x) * amount || 0;\n\t\tthis.y += (v1.y - this.y) * amount || 0;\n\t\treturn this;\n\t}\n\t/**\n\t * Returns the direction of the Vector\n\t * @returns \n\t */\n\theading() {\n\t\tconst h = Math.atan2(this.y, this.x);\n\t\treturn h;\n\t}\n\n\tmagSq() {\n\t\tconst x = this.x;\n\t\tconst y = this.y;\n\t\treturn x * x + y * y;\n\t}\n\n\tmag() {\n\t\treturn Math.sqrt(this.magSq());\n\t}\n\n\tnormalize() {\n\t\treturn this.div(this.mag());\n\t}\n\n\t/**\n\tMultiply vector length (ie magnitude) by a constant\n\t*/\n\tmult(n) {\n\t\tif (isNaN(n)) {\n\t\t\tconsole.error(`Vector.mult: parameter is not a number: (${n})`);\n\t\t}\n\t\tthis.x *= n;\n\t\tthis.y *= n;\n\t\treturn this;\n\t}\n\n\t/**\n\t *  set magnitude to a given value\n\t */\n\tsetMag(n) {\n\t\treturn this.normalize().mult(n);\n\t}\n\n\n\t/**\n\t * Substracts either a Vector or a scalar\n\t * @param {*} n \n\t * @returns \n\t */\n\tsub(n) {\n\t\tif (n instanceof Vector) {\n\t\t\tthis.x -= n.x;\n\t\t\tthis.y -= n.y;\n\t\t\treturn this;\n\t\t} else if (typeof n === \"number\") {\n\t\t\tthis.x -= n;\n\t\t\tthis.y -= n;\n\t\t\treturn this;\n\t\t} else {\n\t\t\tconsole.error(`Parameter in Vector.sub(n) Not supported: ${n})`);\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn \"[\" + this.x + \", \" + this.y + \"]\";\n\t}\n}\n\n/* Return a random integer between min and max (inclusive) */\nfunction randomIntBounds(min, max) {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default Vector;","\n export function rectContainsShape(rectangle, shape) {\n\tif (shape.type == \"Circle\") {\n\t\treturn rectContainsCircle(rectangle, shape);\n\t} else if (shape.type == \"Rectangle\") {\n\t\treturn rectContainsRect(rectangle, shape);\n\t} else {\n\t\tconsole.error(\"rectContainsShape: shape is unknown: \" + shape);\n\t\tconsole.error( shape);\n\t}\n}\n\n/**\n *\n *\n *    x,y\n *    ┌────────────────────────┐ width\n *    │  x,y             width │\n *    │  ┌──────────────────┐  │\n *    │  │                  │  │\n *    │  │                  │  │\n *    │  │                  │  │\n *    │  └──────────────────┘  │\n *    │                  heigth│\n *    └────────────────────────┘ heigth\n\n * @param {*} rect1 \n * @param {*} rect2 \n * @returns \n */\n/*\n function rectContainsRect(rect1, rect2) {\n\tconsole.log(\"rectContainsRect\");\n\t// console.log(rect1.toStringCoordinates());\n\t// console.log(rect2.toStringCoordinates());\n\n\tvar result_X =\n\t\trect1.getX() < rect2.getX() &&\n\t\trect1.getX() + rect1.getWidth() < rect2.getX() + rect2.getWidth();\n\n\tvar result_Y =\n\t\trect1.getY() > rect2.getY() &&\n\t\trect1.getY() + rect1.getHeight() <= rect2.getY() + rect2.getHeight();\n\n\treturn result_X & result_Y;\n}\n*/\n\nfunction rectContainsRect(rect1, rect2) {\n\tvar result_X =\n\t\trect1.x < rect2.x && rect1.x + rect1.width > rect2.x + rect2.width;\n\n\tvar result_Y =\n\t\trect1.y < rect2.y && rect1.y + rect1.height > rect2.y + rect2.height;\n\n\treturn result_X & result_Y;\n}\n\n\n\n\n\nfunction rectContainsCircle(rectangle, circle) {\n\t// LEFT\n\tvar left_include = rectangle.x < circle.x - circle.radius;\n\tif (!left_include) {\n\t\t//circle is outside of the rectangle on the left side\n\t\treturn false;\n\t}\n\t// RIGHT\n\tvar right_include =\n\t\trectangle.x + rectangle.width > circle.x + circle.radius;\n\tif (!right_include) {\n\t\t//circle is outside of the rectangle on the right side\n\t\treturn false;\n\t}\n\t// BOTTOM\n\tvar bottom_include =\n\t\trectangle.y + rectangle.height > circle.y + circle.radius;\n\tif (!bottom_include) {\n\t\t//circle is outside of the rectangle on the bottom side\n\t\treturn false;\n\t}\n\t// TOP:\n\tvar top_include = rectangle.y < circle.y - circle.radius;\n\tif (!top_include) {\n\t\t//circle is outside of the rectangle on the top side\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n","export default class Link {\n\tconstructor(source, target) {\n\t\tif (source.id && target.id) {\n\t\t\tthis.id = source.id + \" → \" + target.id;\n\t\t} else {\n\t\t\tthis.id = source + \" → \" + target;\n\t\t}\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n}\n","import Vector from \"../geometry/Vector\";\n\n\nexport default class Node {\n\tconstructor(id, data) {\n\t\tthis.id = id;\n\n\t\tthis.data = data;\n\t\tthis.level = 0;\n\t\tthis.children = [];\n\n\t\tthis.isCollapsed = false;\n\n\t\tthis.size = 20;\n\t\tthis.mass = 13; //(6 * this.size) / 1.5;\n\t\tthis.radius = this.size;\n\n\t\tthis.pos = new Vector(0, 0);\n\t\tthis.velocity = new Vector(0, 0);\n\t\tthis.acceleration = new Vector(0, 0);\n\t}\n\n\ttoString() {\n\t\treturn \"Node \" + this.id + \" (\" + this.pos.x + \", \" + this.pos.y + \")\";\n\t}\n\n\taddChild(node) {\n\t\tthis.children.push(node);\n\t}\n\n\tgetAdjacents() {\n\t\treturn this.children;\n\t}\n\n\tisAdjacent(node) {\n\t\treturn this.children.indexOf(node) > -1;\n\t}\n\n\t\n}\n","// =============================================================\n//                          Graph\n// =============================================================\nimport Link from \"./Link\";\nimport Node from \"./Node\";\n\nexport default class Graph {\n  constructor() {\n    this.graph = {};\n    this.nodeList = new Map();\n    this.linkList = [];\n    this.adjacency = {};\n    this.changed = false;\n    this.root;\n  }\n\n  /**\n   * Add a node\n   * @param {*} node\n   * @returns\n   */\n  addNode(node) {\n    if (!(node.id in this.graph)) {\n      this.nodeList.set(node.id, node); //\tthis.nodeList.push(node);\n      this.graph[node.id] = node;\n    } else {\n      console.error(\"Node already exists: \" + node.id);\n    }\n    return node;\n  }\n  getNode(nodeId) {\n    //var node = this.graph[nodeId];\n    return this.nodeList.get(nodeId);\n  }\n  removeNode(nodeId) {\n    this.nodeList.delete(nodeId);\n  }\n\n  /**\n   *  Add an object. Create a node from the specified object\n   * @param {*} object\n   * @returns\n   */\n  addObject(object) {\n    var node = new Node(object.id, object);\n\n    if (object.parentId) {\n      node.parent = this.getNode(object.parentId);\n      if (!node.parent) {\n        console.error(\"Parent node not found for parentId: \" + object.parentId);\n      } else {\n        node.level = node.parent.level + 1;\n        node.parent.children.push(node);\n      }\n    } else {\n      this.root = node;\n    }\n    this.addNode(node);\n    this.changed = true;\n    return node;\n  }\n\n  getLinkCount() {\n    return this.linkList.length;\n  }\n  getNodeCount() {\n    //return this.nodeList.length;\n    return this.nodeList.size;\n  }\n\n  addLink(sourceNode_id, targetNode_id) {\n    var sourceNode = this.getNode(sourceNode_id);\n    if (sourceNode == undefined) {\n      throw new TypeError(\"Trying to add a link to the non-existent node with id: \" + sourceNode_id);\n    }\n    var targetNode = this.getNode(targetNode_id);\n    if (targetNode == undefined) {\n      throw new TypeError(\"Trying to add a link to the non-existent node with id: \" + targetNode_id);\n    }\n\n    var link = new Link(sourceNode, targetNode);\n    var exists = false;\n\n    this.linkList.forEach(function (item) {\n      if (link.id === item.id) {\n        exists = true;\n      }\n    });\n\n    if (!exists) {\n      this.linkList.push(link);\n      sourceNode.addChild(targetNode);\n    } else {\n      console.log(\"LINK EXIST: \" + \" source: \" + link.source.id + \" => \" + link.target.id);\n    }\n\n    if (!(link.source.id in this.adjacency)) {\n      this.adjacency[link.source.id] = {};\n    }\n    if (!(link.target.id in this.adjacency[link.source.id])) {\n      this.adjacency[link.source.id][link.target.id] = [];\n    }\n    this.adjacency[link.source.id][link.target.id].push(link);\n  }\n\n  /**\n   *  JSON input can be either a JSON String or a JSON object\n   * @param {*} json_input\n   */\n  loadJSON(json_input) {\n    console.log(\"Graph.loadJSON: json_string: \");\n    console.log(json_input);\n    var json_object;\n    if (typeof json_input === \"string\") {\n      console.log(\"Graph.loadJSON: input is of type string: \");\n      json_object = JSON.parse(json_input);\n    } else if (typeof json_input === \"object\") {\n      console.log(\"Graph.loadJSON: input is of type object: \");\n      json_object = json_input;\n    }\n\n    var nodes = json_object[\"nodes\"];\n    for (let index = 0; index < nodes.length; index++) {\n      var node = nodes[index];\n      this.addObject(node);\n    }\n\n    var links = json_object[\"links\"];\n    if (links) {\n      for (let index = 0; index < links.length; index++) {\n        var link = links[index];\n        this.addLink(link.source, link.target);\n      }\n    }\n    console.log(\"Graph.loadJSON:  loaded Graph=\");\n    console.log(this.graph);\n  }\n\n  toString() {\n    //return this.nodeList.map(printNode);\n    return Array.from(this.nodeList.values()).map(printNode);\n  }\n}\n\nfunction printNode(node) {\n  var adjacentsRepresentation = \"\";\n  if (node.getAdjacents() == 0) {\n    adjacentsRepresentation = \"no children\";\n  } else {\n    adjacentsRepresentation = node\n      .getAdjacents()\n      .map(function (item) {\n        return item.id;\n      })\n      .join(\", \");\n  }\n  return node.id + \" => \" + adjacentsRepresentation;\n}\n","import Node from \"./Node\";\n\nclass TreeNode extends Node {\n  constructor(nodeID, nodeData) {\n    super(nodeID, nodeData);\n    this.children = [];\n    this.parent;\n    this.level = 0;\n  }\n\n  addChild(node) {\n    this.children.push(node);\n    node.parent = this;\n    return node;\n  }\n\n  getChildAt(i) {\n    return this.children[i];\n  }\n  getFirstChild() {\n    return this.getChildAt(0);\n  }\n  getChildren() {\n    return this.children;\n  }\n  getChildrenCount() {\n    return this.children.length;\n  }\n  /**\n   *  isLeftMost: is this node == to the first child of its parent?\n   */\n  isLeftMost() {\n    if (!this.parent || this.parent === null) {\n      return true;\n    } else {\n      return this.parent.getFirstChild() === this;\n    }\n  }\n\n  /**\n   *  isRightMost: is this node == to the last child of its parent?\n   */\n  isRightMost() {\n    if (!this.parent || this.parent === null) {\n      return true;\n    } else {\n      return this.parent.getLastChild() === this;\n    }\n  }\n\n  getLastChild() {\n    return this.getChildAt(this.getChildrenCount() - 1);\n  }\n\n  getLeftSibling() {\n    if (this.parent === null || this.isLeftMost()) {\n      return null;\n    } else {\n      var index = this.parent.children.indexOf(this);\n      return this.parent.children[index - 1];\n    }\n  }\n\n  isLeaf() {\n    return this.children && this.children.length == 0;\n  }\n  hasChild() {\n    return this.children && this.children.length > 0;\n  }\n\n  isAncestorCollapsed() {\n    if (this.parent == null) {\n      return false;\n    }\n    return this.parent.isCollapsed ? true : this.parent.id === -1 ? false : this.parent.isAncestorCollapsed();\n  }\n\n  getRightSibling() {\n    if (this.parent === null || this.isRightMost()) {\n      return null;\n    } else {\n      var index = this.parent.children.indexOf(this);\n      return this.parent.children[index + 1];\n    }\n  }\n\n  getLeftMostChild() {\n    if (this.getChildrenCount() == 0) return null;\n\n    return this.children[0];\n  }\n\n  getRightMostChild() {\n    if (this.getChildrenCount() == 0) return null;\n\n    return this.children[this.getChildrenCount() - 1];\n  }\n\n  hasLeftSibling() {\n    return !this.isLeftMost();\n  }\n\n  getIndex () {\n    return this.parent.children.indexOf(this);\n  }\n\n}\n\nexport { TreeNode };\n","import Graph from \"./Graph\";\nimport { TreeNode } from \"./TreeNode\";\n//import Link from \"./Link\";\n\nexport class Tree extends Graph {\n  constructor() {\n    super();\n    this.root = null;\n    this.nodeMap = new Map();\n  }\n\n  setRoot(nodeID) {\n    this.root = nodeID;\n  }\n  getRoot() {\n    return this.root;\n  }\n\n  isRoot(node) {\n    return node === this.root;\n  }\n\n  traverseDF(callback) {\n    function traverse(node) {\n      callback(node);\n      if (node.children) {\n        node.children.forEach(traverse);\n      }\n    }\n    traverse(this.root);\n  }\n\n  traverseBF(callback) {\n    const queue = [this.root];\n    while (queue.length) {\n      const node = queue.shift();\n      callback(node);\n      node.children.forEach((child) => queue.push(child));\n    }\n  }\n\n  /**\n   * Returns { status: 'success'} or { status: 'error', message: \"error message\"}\n   * @param {*} json\n   */\n  loadFromJSON(json) {\n    const data = JSON.parse(json);\n\n    // create nodes\n    data.nodes.forEach((nodeData) => {\n      const { id, data } = nodeData;\n      const node = new TreeNode(id, data, null);\n      this.nodeMap.set(id, node);\n      // add node to nodesByLevel array\n      //console.log(\"\")\n      //addNodeToLevel(id, parentId, nodesByLevel, node);\n    });\n\n    // Add child nodes to parent nodes\n    data.nodes.forEach((nodeData) => {\n      const { id, parentId } = nodeData;\n      const node = this.nodeMap.get(id);\n      if (parentId) {\n        const parent = this.nodeMap.get(parentId);\n        if (!parent) {\n          return { status: \"error\", message: \"Parent node not found for parentId: \" + parentId };\n        }\n        parent.addChild(node);\n        node.level = node.parent.level + 1;\n      } else {\n        this.root = node;\n      }\n    });\n    return { status: \"success\" };\n  }\n}\n","/* eslint-disable no-unused-vars */\n\n//import Graph from \"../graph/Graph\";\n//import Node from \"../graph/Node\";\n\n\nexport default class AbstractGraphLayout {\n\n    // need to get nodeWidth & nodeHeight\n    constructor(graph, options) {\n\t\tthis.graph = graph;\n\n    }\n\n    calculate_Positions(graph, starting_vertex, center) {\n        console.error(\"not implemented in AbstractGraphLayout. Make sure to use a concrete layout class.\")\n    }\n}","// =============================================================\n// Force Directed Layout\n// =============================================================\nimport AbstractGraphLayout from \"./AbstractGraphLayout\";\nimport Vector from \"../geometry/Vector\";\n\nexport default class ForceDirected extends AbstractGraphLayout {\n\tconstructor(graph, options) {\n\n\t\tsuper();\n\t\tthis.graph = graph;\n\t\tthis.initNodes();\n\n\t\tconst DEFAULTS = {\n\t\t\tGRAVITY: 0.9,\n\t\t\tREPULSION: 500000,\n\t\t};\n\t\tthis.options = Object.assign({}, DEFAULTS, options);\n\t}\n\n\tinitNodes() {\n\t\tlet min = -1000;\n\t\tlet max = 1000;\n\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tnode.pos = new Vector.random(min, max);\n\t\t});\n\t}\n\n\trun() {\n\t\t//requestAnimationFrame(this.animate);\n\t\tconsole.log(\"run\");\n\t}\n\n\tanimate = () => {\n\t\tconsole.log(\"animate\");\n\t};\n\n\t/**\n\t *  applyForce\n\t *\n\t *  Newton’s second law.\n\t *  Receive a force, divide by mass, and add to acceleration.\n\t */\n\tapplyForce(node, force) {\n\t\tlet forceOverMass = Vector.div(force, node.mass);\n\t\tnode.acceleration.add(forceOverMass);\n\t}\n\n\tupdateNodesVelocity() {\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tlet force_copy = node.acceleration.copy();\n\t\t\tlet forceOverMass = force_copy.div(node.mass);\n\t\t\t//\tnode.velocity.add( forceOverMass );\n\t\t\tnode.pos.add(forceOverMass);\n\n\t\t\t//\tnode.velocity.add(node.acceleration);\n\t\t\t//\tnode.pos.add(node.velocity);\n\t\t\t//\tnode.acceleration.mult(0);\n\t\t});\n\t}\n\n\tapplyForcesTowardsCenter() {\n\t\t// apply force towards center\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tlet gravity = node.pos.copy().mult(-1).mult(this.options.GRAVITY);\n\t\t\tnode.acceleration = gravity;\n\t\t\t//node.applyForce(gravity);\n\t\t\t//console.log(node);\n\t\t});\n\t}\n\n\tapplyRepulsiveForces() {\n\t\t// apply repulsive force between nodes\n\t\tlet nodeValues = Array.from(this.graph.nodeList.values());\n\n\t\tfor (let i = 0; i < nodeValues.length - 1; i++) {\n\t\t\tfor (let j = i + 1; j < nodeValues.length; j++) {\n\t\t\t\tif (i != j) {\n\t\t\t\t\tlet node1 = nodeValues[i];\n\t\t\t\t\tlet node2 = nodeValues[j];\n\t\t\t\t\t//console.log(\"applyRepulsiveForces\");\n\t\t\t\t\t//console.log(node1);\n\t\t\t\t\t//console.log(node2);\n\n\t\t\t\t\t// The gravitational force F between two bodies of mass m1 and m2 is\n\t\t\t\t\t// F = G*m1*m2 / r2\n\t\t\t\t\t// the vector that points from one object to the other\n\t\t\t\t\tlet dir = Vector.sub(node2.pos, node1.pos);\n\t\t\t\t\t// let unit = dir.copy().normalize()\n\n\t\t\t\t\t// the length (magnitude) of that vector is the distance between the two objects.\n\t\t\t\t\tlet distance = dir.mag();\n\n\t\t\t\t\t// The strength of the force is inversely proportional to the distance squared.\n\t\t\t\t\t// The farther away an object is, the weaker the force; the closer, the stronger.\n\t\t\t\t\t// original  : without the normalize\n\t\t\t\t\tdir.normalize();\n\n\t\t\t\t\tlet force1 = dir.mult(this.options.REPULSION);\n\t\t\t\t\tforce1.div(distance * distance);\n\n\t\t\t\t\tlet inverseForce = force1.copy().mult(-1);\n\t\t\t\t\tnode2.acceleration.add(force1);\n\t\t\t\t\tnode1.acceleration.add(inverseForce);\n\n\t\t\t\t\t//node2.applyForce(force1);\n\t\t\t\t\t//node1.applyForce(inverseForce);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tapplyForcesExertedByConnections() {\n\t\tthis.graph.linkList.forEach((link) => {\n\t\t\tlet node1 = link.source;\n\t\t\tlet node2 = link.target;\n\n\t\t\t//let maxDis = con[2];\n\t\t\t//let connector_length = 100;\n\n\t\t\tlet dir = Vector.sub(node1.pos, node2.pos);\n\n\t\t\tlet neg_force = new Vector(0, 0).sub(dir);\n\t\t\tlet pos_force = new Vector(0, 0).add(dir);\n\n\t\t\tnode1.acceleration.add(neg_force);\n\t\t\tnode2.acceleration.add(pos_force);\n\n\t\t\t//node1.applyForce(neg_force);\n\t\t\t//node2.applyForce(pos_force);\n\t\t});\n\t}\n\n\tapplyForces() {\n\t\t// Force equals mass times acceleration.\n\t\t// Newton’s second law, F→=M×A→ (or force = mass * acceleration).\n\t\tthis.applyForcesTowardsCenter();\n\n\t\tthis.applyRepulsiveForces();\n\n\t\tthis.applyForcesExertedByConnections();\n\n\t\tthis.updateNodesVelocity();\n\n\t\t// kinetic energy (KE) is equal to half of an object's mass (1/2*m) multiplied by the velocity squared.\n\t\t/*\n\t\tlet total_KE = 0.0;\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tlet velocity = node.velocity.mag();\n\n\t\t\tlet node_KE = 0.5 * node.mass * (velocity * velocity);\n\t\t\ttotal_KE = + node_KE;\n\n\t\t});\n\t\tconsole.warn(\"total_KE= \" + total_KE);\n\t\t*/\n\t}\n}\n","import AbstractGraphLayout from \"./AbstractGraphLayout\";\n\nconst DEFAULTS = {\n  rootOrientation: \"NORTH\",\n  maximumDepth: 3,\n  levelSeparation: 50 /* distance between levels = vertical spread */,\n  siblingSpacing: 50 /* distance between leaf siblings */,\n  subtreeSeparation: 160 /* distance between each subtree */,\n  stackedLeaves: true,\n  stackedIndentation : 40,\n  nodeWidth: 0,\n  nodeHeight: 0\n}\n\nexport default class TreeLayout extends AbstractGraphLayout {\n  constructor(tree, options) {\n    super(tree);\n    /**\n     * lastNodeAtLevel: stores the last node visited at each level to set as left most nodes' neighbor\n     */\n    this.lastNodeAtLevel = [];\n\n    this.options = Object.assign({}, DEFAULTS, options);\n    options || (options = {});\n    for (let i in DEFAULTS) {\n      if (i in options) {\n        this[i] = options[i];\n      } else {\n        this[i] = DEFAULTS[i];\n      }\n    }\n\n    console.log(\"TreeLayout constructed.\");\n    console.log(this);\n\n    /**\n     * Do a post-order traversal (ie: from the bottom-left to the top-right)\n     * Visit the current node after visiting all the nodes from left to right.\n     */\n    const firstWalk = (node, level) => {\n      //console.log(\"firstWalk\", node, level);\n\n      // private function implementation\n      node.prelim = 0;\n      node.modifier = 0;\n      node.width = node.width || this.nodeWidth;\n      node.height = node.height || this.nodeHeight;\n\n      setNodeNeighbor(node, level);\n\n      //\n      let leftSibling = node.getLeftSibling();\n      //console.log(\"leftSibling  = \" + leftSibling);\n      if (node.isLeaf() || node.level == this.maximumDepth) {\n        if (leftSibling) {\n          /*-------------------------------------------------\n           * Determine the preliminary x-coordinate based on:\n           * - preliminary x-coordinate of left sibling,\n           * - the separation between sibling nodes, and\n           * - mean width of left sibling & current node.\n           *-------------------------------------------------*/\n          //console.log(\"\\\\___ firstWalk Sibling: left=\" + leftSibling.id + \" right=\" + node.id);\n          node.prelim = leftSibling.prelim + this.siblingSpacing;\n          let meanNodeSize = getMeanNodeSize(node, leftSibling);\n          //\tconsole.log(\"meanNodeSize = \" + meanNodeSize);\n          node.prelim += meanNodeSize;\n          //console.log(\"prelim = \" + leftSibling.prelim + \" + \" + this.siblingSpacing + \" + \" + meanNodeSize + \" = \" + node.prelim);\n        } else {\n          /*  no sibling on the left to worry about  */\n          node.prelim = 0;\n          //console.log(node.id + \" is a leaf with no left sibling\");\n          //console.log(\"prelim  = \" + node.prelim);\n          //console.log(\"modifier= \" + node.modifier);\n        }\n      } else {\n        /* This Node is not a leaf, so call this procedure \n        /* recursively for each of its offspring.          */\n        var children_count = node.getChildrenCount();\n        for (let i = 0; i < children_count; i++) {\n          let child = node.getAdjacents()[i];\n          firstWalk(child, level + 1);\n        }\n        //console.log(node);\n\n        var midPoint = getMidPoint(node);\n        //console.log(\"midPoint of \" + node.id + \"= \" + midPoint);\n\n        //console.log(node.id + \" is the parent of nodes \" + leftMostChild.id + \" and \" + rightMostChild.id);\n\n        if (leftSibling) {\n          node.prelim += leftSibling.prelim + this.siblingSpacing;\n          let meanNodeSize = getMeanNodeSize(node, leftSibling);\n          node.prelim += meanNodeSize;\n          node.modifier = node.prelim - midPoint;\n          //console.log(\"prelim = \" + leftSibling.prelim + \" + \" + this.siblingSpacing + \" + \" + meanNodeSize + \" = \" + node.prelim);\n          //console.log(\"modifier= \" + node.prelim + \" - \" + node.modifier);\n          console.log(\"Calling Apportion for = \" + node.id + \" - level = \" + level);\n          apportion(node, level);\n        } else {\n          node.prelim = midPoint;\n          //console.log(\"prelim  = \" + node.prelim);\n        }\n      }\n    };\n\n    const getMidPoint = (node) => {\n      var leftMostChild = node.getLeftMostChild();\n      var rightMostChild = node.getRightMostChild();\n      var midPoint = (leftMostChild.prelim + rightMostChild.prelim) / 2;\n      return midPoint;\n    };\n\n    const setNodeNeighbor = (node) => {\n      let isLeftMost = node.isLeftMost();\n      let isRightMost = node.isRightMost();\n      console.log(\"setNodeNeighbor NODE= \" + node.id + \" , level= \" + node.level + \", isLeftMost(\" + isLeftMost + \")\" + \", isRightMost(\" + isRightMost + \")\");\n      if (isRightMost) {\n        //console.log(\"\\\\_setNodeNeighbor lastNodeAtLevel      = \" + node.id);\n        //console.log(\"\\\\_setNodeNeighbor this.lastNodeAtLevel[node.level]       = \" + node);\n        this.lastNodeAtLevel[node.level] = node;\n      } else if (isLeftMost) {\n        node.neighbor = this.lastNodeAtLevel[node.level];\n        if (node.neighbor) {\n          //console.log(\"\\\\_setNodeNeighbor of \" + node.id + \" to \" + node.neighbor.id);\n        }\n      } else {\n        // has no subtree to move\n        //console.log(\"\\\\_setNodeNeighbor      = \" + node + \"  DO nothing\");\n      }\n    };\n\n    const getMeanNodeSize = (leftNode, rightNode) => {\n      var meanNodeSize = 0.0;\n      switch (this.rootOrientation) {\n        case \"NORTH\":\n        case \"SOUTH\":\n          if (leftNode) {\n            meanNodeSize = leftNode.width; /// 2;\n          }\n          if (rightNode) {\n            meanNodeSize = rightNode.width; // / 2;\n          }\n          break;\n        case \"EAST\":\n        case \"WEST\":\n          if (leftNode) {\n            meanNodeSize = leftNode.height / 2;\n          }\n          if (rightNode) {\n            meanNodeSize = rightNode.height / 2;\n          }\n          break;\n      }\n      return meanNodeSize;\n    };\n\n    /**\n     * Determine the leftmost descendant of a node at a given depth.\n     * This is implemented using a post-order walk of the subtree\n     * under node, down to the level of searchDepth.\n     * If we've searched to the proper distance, return the currently leftmost node.\n     * Otherwise, recursively look at the progressively lower levels.\n     */\n    const getLeftmost = (node, currentLevel, searchDepth) => {\n      //console.log(\"START getLeftmost= \" + node.id + \"/\" + currentLevel + \"/\" + searchDepth);\n\n      /*  searched far enough.           */\n      if (currentLevel >= searchDepth) {\n        return node;\n      } else if (node.isLeaf()) {\n        return null; /* This node has no descendants    */\n      } else {\n        /* Do a post-order walk of the subtree.     */\n        var children_count = node.getChildrenCount();\n        //console.log(\"  \" + ThisNode.id + \"/  children_count=\" + children_count);\n        for (var i = 0; i < children_count; i++) {\n          let child = node.children[i];\n          let leftmost = getLeftmost(child, currentLevel + 1, searchDepth);\n          if (leftmost) {\n            return leftmost;\n          }\n        }\n      }\n    };\n\n    /*------------------------------------------------------\n     * Clean up the positioning of small sibling subtrees.\n     * Subtrees of a node are formed independently and placed as close together as possible.\n     * By requiring that the subtrees be rigid at the time they are put together, we avoid\n     * the undesirable effects that can accrue from positioning nodes rather than subtrees.\n     *\n     *  Called for non-leaf nodes\n     *----------------------------------------------------*/\n    const apportion = (node, level) => {\n      //console.log(\"_apportion \" + node.id);\n\n      var firstChild = node.children[0];\n      var firstChildLeftNeighbor = firstChild.neighbor;\n      var compareDepth = 1;\n      var depthToStop = this.maximumDepth - level;\n\n      if (firstChild && firstChildLeftNeighbor && compareDepth < depthToStop) {\n        var rightModSum, leftModSum, rightAncestor, leftAncestor;\n\n        leftModSum = 0;\n        rightModSum = 0;\n        rightAncestor = firstChild;\n        leftAncestor = firstChildLeftNeighbor;\n        for (var l = 0; l < compareDepth; l += 1) {\n          rightAncestor = rightAncestor.parent;\n          leftAncestor = leftAncestor.parent;\n          rightModSum += rightAncestor.modifier;\n          leftModSum += leftAncestor.modifier;\n        }\n        /**\n         * Find the moveDistance, and apply it to Node's subtree.\n         * Apply appropriate portions to smaller interior subtrees.\n         **/\n        var meanNodeSize = 10; //firstChildLeftNeighbor._getSize(this.orientation);\n\n        var totalGap = firstChildLeftNeighbor.prelim + leftModSum + this.subtreeSeparation + meanNodeSize - (firstChild.prelim + rightModSum);\n        //console.log(\"\\\\__apportion: totalGap of \" + node.id + \" = \" + totalGap);\n\n        if (totalGap > 0) {\n          /* Count interior sibling subtrees in LeftSiblings */\n\n          var subtree, subtreeMoveAux;\n\n          var numberOfLeftSiblings = 0;\n          for (subtree = node; subtree && subtree !== leftAncestor; subtree = subtree.getLeftSibling()) {\n            numberOfLeftSiblings += 1;\n            //console.log(\"\\\\__apportion: numberOfLeftSiblings: \" + numberOfLeftSiblings);\n            //console.log(\"\\\\__apportion: leftAncestor = \" + leftAncestor.id);\n          }\n\n          if (subtree) {\n            /* Apply portions to appropriate leftsibling subtrees. */\n            var portion = totalGap / numberOfLeftSiblings;\n            subtreeMoveAux = node;\n\n            while (subtreeMoveAux !== leftAncestor) {\n              //console.log(\"\\\\__apportion: subtree \" + subtree.id + \" & \" + \"subtreeMoveAux \" + subtreeMoveAux.id);\n\n              subtreeMoveAux.prelim += totalGap;\n              subtreeMoveAux.modifier += totalGap;\n              totalGap -= portion;\n              subtreeMoveAux = subtreeMoveAux.getLeftSibling();\n            }\n          } else {\n            /* Don't need to move anything--it needs to be done by an ancestor because      */\n            /* pAncestorNeighbor and pAncestorLeftmost are not siblings of each other.      */\n            return;\n          }\n        } /* end of the while  */\n\n        /* Determine the leftmost descendant of thisNode */\n        /* at the next lower level to compare its         */\n        /* positioning against that of its neighbor.     */\n        compareDepth++;\n\n        if (firstChild.getChildrenCount() === 0) {\n          firstChild = getLeftmost(node, 0, compareDepth);\n        } else {\n          firstChild = firstChild.getFirstChild();\n        }\n        if (firstChild) {\n          firstChildLeftNeighbor = firstChild.neighbor;\n        }\n      }\n\n\n    }; // apportion\n\n      /*------------------------------------------------------\n       * During a second pre-order walk, each node is given a final x-coordinate by summing its preliminary\n       * x-coordinate and the modifiers of all the node's ancestors.\n       * The y-coordinate depends on the height of the tree.\n       * (The roles of x and y are reversed for RootOrientations of EAST or WEST.)\n       * Returns: TRUE if no errors, otherwise returns FALSE.\n       *----------------------------------------- ----------*/\n      const secondWalk = (node, level, modSum) => {\n        //console.log(\"secondWalk    = \" + node);\n        if (level <= this.maximumDepth) {\n          var xTopAdjustment = 0;\n          var yTopAdjustment = 0;\n\n          node.x = xTopAdjustment + node.prelim + modSum;\n          node.y = yTopAdjustment + level * this.levelSeparation;\n          //console.log(\"\\\\secondWalk: Node(\" + node.id + \" / \" + xTopAdjustment + \" / \" + node.prelim + \" / \" + modSum);\n          //console.log(\"\\\\secondWalk: \" + node.x + \",\" + node.y);\n\n          if (this.leavesStacked) {\n            if (node.isLeaf()) {\n              const indentation = 30;\n              let index = node.getIndex();\n              node.x = node.parent.x + indentation;\n              node.y += node.getIndex() * this.nodeHeight + node.getIndex() * this.siblingSpacing; //\tshift the node down\n              console.log(`secondWalk: ${node} #${index}  (${node.x}, ${node.y})`);\n            }\n          }\n\n\n          var children_count = node.getChildrenCount();\n          for (var i = 0; i < children_count; i++) {\n            var child = node.children[i];\n            secondWalk(child, level + 1, modSum + node.modifier);\n          }\n        }\n      };\n\n\n    // PUBLIC FUNCTIONS\n    this.calculate_Positions = (root, center) => {\n      console.log(\"calculate_Positions\", this, center);\n      //var root = this.graph.getRoot();\n      console.log(\"root\", root);\n      let starting_node = root;\n\n      // call the private function\n      firstWalk(starting_node, 0);\n      secondWalk(starting_node, 0, 0);\n    };\n\n    this.getTreeDimension = () => {\n        return { \"TO DO\" : \"\"};\n    }\n  }\n}\n","\n\nexport var NONE = \"none\";\nexport var pi = Math.PI;\n","import {NONE} from './Constants.js';\n\nexport default class Shape {\n    constructor(x, y, type) {\n        this.type = type;\n        this.x = x;\n        this.y = y;\n        this.isSelected = false;\n        this.strokeStyle = NONE;\n\n    }\n    getColor() {\n        return this.color;\n    }\n}","import Shape from './Shape.js';\nimport { NONE } from './Constants.js';\n\nexport default class Arc extends Shape {\n  constructor(x, y, radius, radians) {\n    super(x, y, \"Arc\");\n    this.radius = radius;\n    this.radians = radians;\n  }\n  isHit(x, y) {\n    var dx = this.x - x;\n    var dy = this.y - y;\n    if (dx * dx + dy * dy < this.radius * this.radius) {\n      return true;\n    }\n  }\n  render(ctx) {\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, this.radians, false);\n\n    if (this.fillStyle) {\n      ctx.fillStyle = this.fillStyle;\n      ctx.fill();\n    }\n\n    if (this.strokeStyle != NONE) {\n      ctx.strokeStyle = this.strokeStyle;\n      ctx.lineWidth = this.lineWidth;\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  }\n}","import Arc from './Arc.js';\n\n\nexport default class Circle extends Arc {\n    constructor(x, y, radius) {\n      super(x, y, radius, Math.PI *2);\n      this.type = \"Circle\";\n    }\n    isHit(x, y) {\n      var dx = this.x - x;\n      var dy = this.y - y;\n      if (dx * dx + dy * dy < this.radius * this.radius) {\n        return true;\n      }\n    }\n\n    getBBox() {\n      return {\n        x: this.x - this.radius,\n        y: this.y - this.radius,\n        width : this.radius * 2,\n        height : this.radius * 2\n      }\n    }\n  }","import Shape from './Shape.js';\nimport { NONE } from './Constants.js';\n\n\nexport default class Rectangle extends Shape {\n    constructor(x, y, width, height) {\n        super(x, y, \"Rectangle\");\n        this.width = width;\n        this.height = height;\n    }\n    getArea() {\n        return this.width * this.height;\n    }\n\n    isHit(x, y) {\n        if (\n            x > this.x &&\n            x < this.x + this.width &&\n            y > this.y &&\n            y < this.y + this.height\n        ) {\n            return true;\n        }\n    }\n    render(ctx) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(\n            this.x,\n            this.y,\n            this.width,\n            this.height\n        );\n\n        if (this.fillStyle) {\n            ctx.fillStyle = this.fillStyle;\n            ctx.fill();\n        }\n        if (this.strokeStyle != NONE) {\n            ctx.strokeStyle = this.strokeStyle;\n            ctx.lineWidth = this.lineWidth;\n            ctx.stroke();\n        }\n        ctx.restore();\n    }\n    toString() {\n        return `rectangle:  (${this.x},${this.y}) x (${this.width},${this.height})`;\n    }\n}","export default class InputDeviceTracker {\n\tconstructor(canvas, callback) {\n\t\tconsole.log(\"InputDeviceTracker ()\");\n\n\t\tthis.canvas = canvas;\n\t\tthis.callback = callback;\n\n\t\t/**\n\t\t *  Stores the panning offset between the initial location and the canvas location after is has been panned\n\t\t */\n\t\tthis.translatedPos = { x: 0, y: 0 };\n\n\t\t/**\n\t\t *  the accumulated horizontal(X) & vertical(Y) panning the user has done in total\n\t\t */\n\t\t(this.netPanningX = 0), (this.netPanningY = 0);\n\n\t\t/**\n\t\t *  coordinates of the last move\n\t\t */\n\t\t(this.lastMoveX = 0), (this.lastMoveY = 0);\n\n\t\tthis.startDragOffset = { x: 0, y: 0 };\n\n\t\tthis.canvas.addEventListener(\"mousedown\", this.onDown.bind(this));\n\t\tthis.canvas.addEventListener(\"mousemove\", this.onMove.bind(this));\n\t\tthis.canvas.addEventListener(\"mouseup\", this.onUp.bind(this));\n\n\t\tthis.canvas.addEventListener(\"touchstart\", this.onDown.bind(this));\n\t\tthis.canvas.addEventListener(\"touchmove\", this.onMove.bind(this));\n\t\tthis.canvas.addEventListener(\"touchend\", this.onUp.bind(this));\n\t}\n\n\tgetCoordinatesFromEvent(evt) {\n\t\tvar rect = self.canvas.getBoundingClientRect();\n\t\tvar offsetTop = rect.top;\n\t\tvar offsetLeft = rect.left;\n\n\t\tif (evt.touches) {\n\t\t\treturn {\n\t\t\t\tx: evt.touches[0].clientX - offsetLeft,\n\t\t\t\ty: evt.touches[0].clientY - offsetTop,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tx: evt.clientX - offsetLeft,\n\t\t\t\ty: evt.clientY - offsetTop,\n\t\t\t};\n\t\t}\n\t}\n\n\tonDown(event) {\n\t\t// tell the browser we're handling this event\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tvar mouseCoords = this.getCoordinatesFromEvent(event);\n\n\t\t// initial mouse click signaling the start of the dragging motion: we save the location of the user's mouse.\n\t\t// dragging offest = current mouse - panning\n\t\tthis.startDragOffset.x = mouseCoords.x - this.translatedPos.x;\n\t\tthis.startDragOffset.y = mouseCoords.y - this.translatedPos.y;\n\n\t\tthis.callback(\"down\", mouseCoords.x, mouseCoords.y);\n\t}\n\n\tonUp(event) {\n\t\tevent.preventDefault();\n\t\tthis.callback(\"up\");\n\t}\n\n\tonMove(event) {\n\t\t// tell the browser we're handling this event\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tvar mouseCoords = this.getCoordinatesFromEvent(event);\n\t\tthis.callback(\"move\", mouseCoords.x, mouseCoords.y);\n\t}\n}\n","import InputDeviceTracker from \"./InputDeviceTracker\";\nimport { Rectangle, Circle } from \"./shape\";\nimport { Renderer, setupHiDefCanvas } from \"./canvas\";\nimport { rectContainsShape } from \"./geometry\";\n\nexport class MChart {\n\tconstructor(container, options) {\n\t\tconsole.log(\"MChart container()\");\n\t\tconsole.log(container);\n\t\tthis.container = container;\n\t\t(this.startX = 0), (this.startY = 0);\n\t\t(this.lastMoveX = 0), (this.lastMoveY = 0);\n\n\t\tthis.canvas = document.getElementById(\"canvas\");\n\t\t//this.ctx = this.canvas.getContext(\"2d\");\n\t\tthis.ctx = setupHiDefCanvas(this.canvas);\n\n\t\tthis.cw = this.canvas.width;\n\t\tthis.ch = this.canvas.height;\n\n\t\tthis.renderer = new Renderer(this.ctx);\n\t\tthis.inputDeviceTracker = new InputDeviceTracker(\n\t\t\tthis.canvas,\n\t\t\tthis.manageInputEvents.bind(this)\n\t\t);\n\n\t\tconst DEFAULTS = {\n\t\t\tdisplay_grid: false,\n\t\t\tselection: {\n\t\t\t\tstrokeStyle: \"#CC0000\", //  'rgba(255,51,0,1)', //'rgba(0,128,255,1)';\n\t\t\t\tlineWidth: 1,\n\t\t\t\tfillStyle: \"rgba(255,51,0,0.05)\", //'rgba(0,128,255, 0.2)';\n\t\t\t},\n\t\t};\n\t\tthis.options = Object.assign({}, DEFAULTS, options);\n\n\t\t/* The selection rectangle */\n\t\tthis.selection = new Rectangle(100, 100, 100, 100);\n\t\tthis.selection.strokeStyle = this.options.selection.strokeStyle;\n\t\tthis.selection.fillStyle = this.options.selection.fillStyle;\n\t\tthis.selection.lineWidth = this.options.selection.lineWidth;\n\n\t\t/* The list of ojbects to draw */\n\t\tthis.objects = [];\n\n\t\t/**\n\t\t *  Stores the panning offset between the initial location and the canvas location after is has been panned\n\t\t */\n\t\tthis.translatePos = { x: 0, y: 0 };\n\n\t\t/**\n\t\t *  the accumulated horizontal(X) & vertical(Y) panning the user has done in total\n\t\t */\n\t\tthis.netPanningX = 0;\n\t\tthis.netPanningY = 0;\n\n\t\t/**\n\t\t *  coordinates of the last move\n\t\t */\n\t\tthis.lastMoveX = 0; this.lastMoveY = 0;\n\n\t\tthis.isSelecting = false;\n\t\tthis.isDragging = false;\n\t\tthis.clicked_on_the_canvas = false;\n\t}\n\n\tdump() {\n\t\tconsole.log(\"MChart container= \");\n\t\tconsole.log(\"- objects= \");\n\t\tconsole.log(this.objects);\n\t}\n\n\taddObject(object) {\n\t\tthis.objects.push(object);\n\t\t//this.draw();\n\t}\n\n\t/**\n\t *  Private function to render one frame. It is being called by render()\n\t */\n\trenderFrame = () => {\n\t\t// console.log(\"renderFrame\")\n\t\tthis.ctx.clearRect(0, 0, this.cw, this.ch);\n\n\t\tif (this.options.display_grid) {\n\t\t\tthis.renderer.drawGrid(this.cw, this.ch);\n\t\t}\n\n\t\tthis.objects.forEach((object) => {\n\t\t\tobject.render(this.ctx);\n\t\t\tif (object.isSelected) {\n\t\t\t\tvar selection;\n\t\t\t\tif (object instanceof Circle) {\n\t\t\t\t\tvar bbox = object.getBBox();\n\t\t\t\t\tselection = new Rectangle(\n\t\t\t\t\t\tbbox.x,\n\t\t\t\t\t\tbbox.y,\n\t\t\t\t\t\tbbox.width,\n\t\t\t\t\t\tbbox.height\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tselection = new Rectangle(\n\t\t\t\t\t\tobject.x,\n\t\t\t\t\t\tobject.y,\n\t\t\t\t\t\tobject.width,\n\t\t\t\t\t\tobject.height\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tselection.strokeStyle = this.options.selection.strokeStyle;\n\t\t\t\tselection.lineWidth = this.options.selection.lineWidth;\n\t\t\t\tselection.render(this.ctx);\n\n\t\t\t}\n\n\t\t\tif (this.isSelecting == true) {\n\t\t\t\tthis.selection.render(this.ctx);\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\t\tthis.renderFrame();\n\t\twindow.requestAnimationFrame(this.render.bind(this, this.canvas));\n\t}\n\n\tmanageInputEvents(evtType, x, y) {\n\t\tswitch (evtType) {\n\t\t\tcase \"down\":\n\t\t\t\tthis.mouseIsDown = true;\n\n\t\t\t\tthis.startX = x;\n\t\t\t\tthis.startY = y;\n\t\t\t\tthis.lastMoveX = x;\n\t\t\t\tthis.lastMoveY = y;\n\n\t\t\t\t/* we assume the user clicked on the canvas unless we find an object was hit */\n\t\t\t\tthis.clicked_on_the_canvas = true;\n\n\t\t\t\t// we start from last to check the shape that is on top first\n\t\t\t\tfor (var i = this.objects.length - 1; i >= 0; i--) {\n\t\t\t\t\tvar object = this.objects[i];\n\t\t\t\t\t//    console.log (\"checking for hit object = \" + object.color);\n\t\t\t\t\tif (object.isHit(x, y)) {\n\t\t\t\t\t\tobject.isSelected = true;\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\"Clicked on : \" +\n\t\t\t\t\t\t\t\tobject.constructor.name +\n\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\tobject.fillStyle\n\t\t\t\t\t\t);\n\t\t\t\t\t\tmoveObjectToLastPosition(this.objects, object);\n\t\t\t\t\t\tthis.clicked_on_the_canvas = false;\n\t\t\t\t\t\tthis.isSelecting = false;\n\t\t\t\t\t\tthis.isDragging = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"clicked on the canvas = \" + this.clicked_on_the_canvas\n\t\t\t\t);\n\n\t\t\t\tif (this.clicked_on_the_canvas) {\n\t\t\t\t\tconsole.log(\"clicked on the canvas\");\n\t\t\t\t\tthis.selection_startX = x;\n\t\t\t\t\tthis.selection_startY = y;\n\n\t\t\t\t\t/* reset selection if user clicked on the canvas */\n\t\t\t\t\tthis.objects.forEach((object) => {\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\"RESET object \" +\n\t\t\t\t\t\t\t\tobject.fillStyle +\n\t\t\t\t\t\t\t\t\" is Circle ? \" +\n\t\t\t\t\t\t\t\t(object instanceof Circle)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tobject.isSelected = false;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"up\":\n\t\t\t\tthis.mouseIsDown = false;\n\t\t\t\tconsole.log(\"MOUSE UP\");\n\t\t\t\tconsole.log(\" isDragging : \" + this.isDragging);\n\t\t\t\tconsole.log(\" isSelecting : \" + this.isSelecting);\n\n\t\t\t\tif (this.isSelecting) {\n\t\t\t\t\tconsole.log(\" selection : \" + this.selection);\n\t\t\t\t\t/* check if selection includes any object */\n\t\t\t\t\tthis.objects.forEach((object) => {\n\t\t\t\t\t\tif (rectContainsShape(this.selection, object)) {\n\t\t\t\t\t\t\tobject.isSelected = true;\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"object is selected: \" +\n\t\t\t\t\t\t\t\t\tobject.constructor.name +\n\t\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\t\tobject.fillStyle\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.isSelecting = false;\n\t\t\t\tthis.isDragging = false;\n\t\t\t\tbreak;\n\n\t\t\tcase \"move\":\n\t\t\t\tif (this.clicked_on_the_canvas && this.mouseIsDown) {\n\t\t\t\t\tthis.isSelecting = true;\n\t\t\t\t\t// getting the min & max to handle when the user selects from bottom right to top left\n\t\t\t\t\tconst x1 = Math.min(this.selection_startX, this.lastMoveX);\n\t\t\t\t\tconst y1 = Math.min(this.selection_startY, this.lastMoveY);\n\t\t\t\t\tconst x2 = Math.max(this.selection_startX, this.lastMoveX);\n\t\t\t\t\tconst y2 = Math.max(this.selection_startY, this.lastMoveY);\n\n\t\t\t\t\tthis.selection.x = Math.floor(x1);\n\t\t\t\t\tthis.selection.y = Math.floor(y1);\n\t\t\t\t\tthis.selection.width = Math.floor(x2 - x1);\n\t\t\t\t\tthis.selection.height = Math.floor(y2 - y1);\n\t\t\t\t}\n\t\t\t\tthis.lastMoveX = x;\n\t\t\t\tthis.lastMoveY = y;\n\n\t\t\t\tvar dx = x - this.startX;\n\t\t\t\tvar dy = y - this.startY;\n\n\t\t\t\tthis.startX = x;\n\t\t\t\tthis.startY = y;\n\n\t\t\t\tif (this.isDragging) {\n\t\t\t\t\tthis.objects.forEach((object) => {\n\t\t\t\t\t\tif (object.isSelected) {\n\t\t\t\t\t\t\tobject.x += dx;\n\t\t\t\t\t\t\tobject.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tinit() {\n\t\tthis.inputDeviceTracker = new InputDeviceTracker(\n\t\t\tthis.canvas,\n\t\t\tthis.manageInputEvents.bind(this)\n\t\t);\n\t}\n}\n\n/**\n *  We move the node selection to the last position so that it is drawn above the other shapes on the canvas\n */\nfunction moveObjectToLastPosition(object_list, object_to_move) {\n\tobject_list.forEach(function (object, index) {\n\t\tif (object === object_to_move) {\n\t\t\tobject_list.splice(index, 1);\n\t\t\tobject_list.push(object_to_move);\n\t\t\treturn;\n\t\t}\n\t});\n}","export class OrgChart {\n\n    constructor(container) {\n        this.container = container;\n\n        const nodesContainer = document.createElement(\"div\");\n        nodesContainer.id = \"nodes-container\";\n        this.container.appendChild(nodesContainer);\n\n        this.linksContainer = document.createElement(\"div\");\n        this.linksContainer.id = \"links-container\";\n        this.container.appendChild(this.linksContainer);\n        this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        this.linksContainer.appendChild(this.svg);\n    }\n\n    setData(data) {\n        console.log(\"HERE in setData\", data);\n    }\n}","\nexport * from \"./canvas\";\nexport * from \"./geometry\";\nexport * from \"./graph\";\nexport * from \"./layout\";\nexport * from \"./shape\";\n\nexport {MChart} from \"./MChart\";\nexport {OrgChart} from \"./OrgChart\";\n\nexport var version = \"0.1\"\n\n\n"],"names":[],"mappings":"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"}